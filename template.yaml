AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sls-app-tags

  Sample SAM Template for sls-app-tags using Python

# ...................................................................................................
# ...................................................................................................
#   GLOBAL CONFIG
# ...................................................................................................
# ...................................................................................................
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true

# ...................................................................................................
# ...................................................................................................
#   PARAMETERS
# ...................................................................................................
# ...................................................................................................
Parameters:
  StageName:
    Type: String
    Default: Dev
    Description: Stage name for the API

# ...................................................................................................
# ...................................................................................................
#   RESOURCES
# ...................................................................................................
# ...................................................................................................
Resources:
  # .................................................................................................
  # .................................................................................................
  #   1.Tags
  # .................................................................................................
  # .................................................................................................
  # .................................................................................................
  # .................................................................................................
  #   1.1 DynamoDB Tags Table (is optional)
  # .................................................................................................
  # .................................................................................................
  TagsDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'TagsTable'
      AttributeDefinitions:
        - AttributeName: tagsId
          AttributeType: S
      KeySchema:
        - AttributeName: tagsId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      #ProvisionedThroughput:
      #ReadCapacityUnits: 1
      #WriteCapacityUnits: 1
  # .................................................................................................
  # .................................................................................................
  #   1.2 Api Gateway for Tags Lambda functions (is optional)
  # .................................................................................................
  # .................................................................................................
  TagsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      EndpointConfiguration:
        Type: REGIONAL
      Description: 'API Gateway for Tags functions'
  # .................................................................................................
  # .................................................................................................
  #   1.3.1 Create a Tags Function
  # .................................................................................................
  # .................................................................................................
  CreateTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/app/tags/create/
      Handler: app.lambda_handler
      Architectures:
        - arm64
      Runtime: python3.11
      Environment:
        Variables:
          REGION: !Sub '${AWS::Region}'
          TABLE_NAME: !Ref TagsDynamoDBTable
      Events:
        CreateTagsApi:
          Type: Api
          Properties:
            RestApiId: !Ref TagsApi
            Path: /tags
            Method: post
  # .................................................................................................
  # .................................................................................................
  #   1.3.2 Get Tags Function (All or by Id)
  # .................................................................................................
  # .................................................................................................
  GetTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/app/tags/get/
      Handler: app.lambda_handler
      Architectures:
        - arm64
      Runtime: python3.11
      Environment:
        Variables:
          REGION: !Sub '${AWS::Region}'
          TABLE_NAME: !Ref TagsDynamoDBTable
      Events:
        GetTagsApi:
          Type: Api
          Properties:
            RestApiId: !Ref TagsApi
            Path: /tags
            Method: get
  # .................................................................................................
  # .................................................................................................
  #   1.3.3 Update a Tags Function
  # .................................................................................................
  # .................................................................................................
  UpdateTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/app/tags/update/
      Handler: app.lambda_handler
      Architectures:
        - arm64
      Runtime: python3.11
      Environment:
        Variables:
          REGION: !Sub '${AWS::Region}'
          TABLE_NAME: !Ref TagsDynamoDBTable
      Events:
        GetTagsApi:
          Type: Api
          Properties:
            RestApiId: !Ref TagsApi
            Path: /tags
            Method: put
  # .................................................................................................
  # .................................................................................................
  #   1.3.4 Delete a Tags Function
  # .................................................................................................
  # .................................................................................................
  DeleteTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/app/tags/delete/
      Handler: app.lambda_handler
      Architectures:
        - arm64
      Runtime: python3.11
      Environment:
        Variables:
          REGION: !Sub '${AWS::Region}'
          TABLE_NAME: !Ref TagsDynamoDBTable
      Events:
        GetTagsApi:
          Type: Api
          Properties:
            RestApiId: !Ref TagsApi
            Path: /tags
            Method: delete

# ...................................................................................................
# ...................................................................................................
#   OUTPUTS
# ...................................................................................................
# ...................................................................................................
Outputs:
  TagsApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${TagsApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/tags"
